pipeline {
    agent any
    environment {
        dockerHome = tool "myDocker"
		PATH = "$dockerHome/bin:$PATH"
    }

    stage("Build Docker MVC Image") {
        steps {
            withCredentials([file(credentialsId: "blog_mvc_env", variable: "ENV_FILE_MVC")]) {
                echo "Current directory before moving into blog_mvc"
                sh "pwd"

                echo "Current directory inside blog_mvc"
                sh "pwd"
                sh "ls"

                script {
                    sh """
                    set -a
                    . \$ENV_FILE_MVC
                    set +a
                    cd blog_mvc

                    # Build Docker image with environment variables
                    docker build \
                        --build-arg PORT=\$PORT \
                        --build-arg NODE_ENV=\$NODE_ENV \
                        --build-arg DB_USER=\$DB_USER \
                        --build-arg DB_HOST=\$DB_HOST \
                        --build-arg DB_NAME=\$DB_NAME \
                        --build-arg DB_PASSWORD=\$DB_PASSWORD \
                        --build-arg DB_PORT=\$DB_PORT \
                        --build-arg JWT_SECRET=\$JWT_SECRET \
                        -t customhaven/blog_mvc:${env.BUILD_TAG} .
                    """
                    env.DOCKER_IMAGE_MVC = "customhaven/blog_mvc:${env.BUILD_TAG}"
                    // dockerImageMVC = docker.image("customhaven/blog_mvc:${env.BUILD_TAG}")
                }
            }
        }
    }
    stage("Push Docker MVC Image") {
        steps {
            dir("blog_mvc") {
                script {
                    docker.withRegistry("", "dockerhub") {
                        sh "docker push ${env.DOCKER_IMAGE_MVC}"
                        // dockerImageMVC.push()
                        // dockerImageMVC.push("${env.BUILD_TAG}")
                    }
                }
            }
        }
    }
    post {
		always {
			echo "I always run"
		}
		success {
			echo "I run when successful"
		}
		failure {
            echo "I run when failed"
		}
	}
}